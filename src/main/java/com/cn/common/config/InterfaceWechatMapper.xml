<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"   
"http://mybatis.org/dtd/mybatis-3-mapper.dtd" >  
<!-- 
    @author chen.kai
	mapper.xml 规范 ：
   1)namespace 等于mapper接口地址,也就是dao下面的java类，通过这个java类，可以访问类里定义的方法
   2)mapper.Java 接口中的方法和mapper.xml中的statement 的id一致
   3)mapper.java 接口中的方法的参数和mapper.xml中的statement 的paramterType类型一致
   4)mapper.java 接口中的方法的返回值和mapper.xml中的statement的resultType类型一致	
 --> 
<mapper namespace="com.cn.common.dao.InterfaceWechatMapper"> 

  <!-- wechat的任务队列，因为to是关键字，这里加上''进行转义 -->
  <select id="selectByParameterObject"  resultType="java.util.HashMap">
		   SELECT
			sysid,
			url,
			para_tappid appid,
			para_tcontent content,
			para_tsecret secret,
			para_model_code modelcode
		FROM
			interface_wechat inter
		WHERE
			NOT EXISTS (
				SELECT
					1
				FROM
					interface_wechat_log log
				WHERE
					inter.sysid = log.interface_wechat_id
			)
		ORDER BY
			sysid
  </select>
  <insert id="insert" parameterType="java.util.Map">
	  insert into interface_wechat_log(interface_wechat_id,message_id,retcode,retmsg,end_time)
	  values(#{sysid},#{messageid},#{retcode},#{retmsg},now())
  </insert>
    <insert id="insertWechat" parameterType="java.util.Map">
		INSERT INTO interface_wechat (
			see_number, from_user,
			from_system,
			from_system_id,
			from_time,
			url,
			para_tappid,
			para_tsecret,
			para_tcontent,
			para_model_code
		)
		VALUES
			(
				#{seeNumber,jdbcType=VARCHAR},#{fromUser,jdbcType=VARCHAR},#{fromSystem,jdbcType=VARCHAR},#{fromSystemId,jdbcType=VARCHAR},now(),
				#{url,jdbcType=VARCHAR},#{appid,jdbcType=VARCHAR},#{secret,jdbcType=VARCHAR},#{content,jdbcType=VARCHAR},#{model,jdbcType=INTEGER})
	 
  </insert>
</mapper>